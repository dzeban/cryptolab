#summary криптографические языки PARI/GP и MAGMA.
= PARI/GP и MAGMA =

==PARI/GP==
PARI / GP является широко используемой алгебраической компьютерной системой, предназначенной для быстрых вычислений в теории чисел (факторизации, алгебраической теория чисел, эллиптических кривых ...), но содержит также большое количество других полезных функций для работы с математическими структурами, такими как матрицы, многочлены, степенные ряды, алгебраические числа и т.д., а также множество трансцендентных функций. PARI также доступна в виде библиотеки C для более быстрого вычисления. 

  * PARI это библиотека C, позволяющая быстро производить расчеты. 
  * gp представляет собой простую в использовании интерактивную оболочку, дающую доступ к функциям PARI. 
  * GP - название скриптового языка GP. 
  * gp2c, сочетает в себе лучшее из обоих миров путём компиляции GP скриптов на языке C и прозрачной загрузки результатов функций в GP. (Gp2c скомпилированные скрипты, как правило, работают в 3 или 4 раза быстрее). Gp2c настоящее время понимает только подмножество языка GP.

На сайте http://pari.math.u-bordeaux.fr/ пользователь может скачать  все дополнительные PARI / GP пакеты, предоставляемые группой PARI. Эти пакеты будут бесполезны для большинства пользователей, поэтому они распространяются отдельно и устанавливаются самостоятельно.

GNU MP или GMP для краткости, это библиотека многократной точности, которая обеспечивает асимптотически быстрые программы для арифметических операций между числами. Ядро PARI  может использовать родную реализацию или использовать GMP, если это возможно.

PARI / GP является свободным программным обеспечением. Она распространяется под GNU's General Public License.

PARI / GP одновременно поддерживает две версии PARI: 

стабильная = нечетный младший номер версии, например, 2.3.x: изменения происходят только, чтобы исправить большие ошибки, которые поддаются лечению с незначительными изменениями. В этой версии нельзя увидеть ни значительные улучшения, ни сложные изменения. Основной целью является стабильная работа при исполнении рабочих скриптов или кода. Таким образом, можно с уверенностью обновлять версию в рамках одной ветви развития, например, 2.3.x, до 2.3.y. Эта ветвь обычно отстает от testing : как правило, она содержит множество известных ошибок и отсутствие некоторых полезных функций. 

тестирование = чётный младший номер версии, например, 2.4.x: это версия для развития, и никаких гарантий не даётся, хотя все обычно работает. Большие фрагменты кода изменяются, особенности проявляются или отменяются, интерфейсы меняются в зависимости от обратной связи, мы получаем, что многие ошибки исправлены, но появляются и новые. В конце концов, версии тестирования объединяются в одну стабильную, и начинается новое тестирование. 

Пример решения задачи с помощью PARI / GP:<br>
*Задача.*<br>
Найти эллиптическую кривую с наибольшим количеством точек, заданную над полем F<sub>13</sub>.<br>
Код для PARI / GP :<br>
? read("sea.gp");
? m=0; for(a=0,12,for(b=0,12, trap(,0, E=ellinit([0,0,0,a,b] x Mod(1,13)); t=ellsea(E,13);<br> if(t>m,m=t;B=[a,b]) ) )); print(m); print(B)<br>
Ответ:<br>
21<br>
{0, 4}<br>
Таким образом, наибольшее число точек (равное 21) над  полем F<sub>13</sub> имеет кривая y^2^ = x^3^+4

==MAGMA==