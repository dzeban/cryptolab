#summary криптографические языки PARI/GP и MAGMA.
= PARI/GP и MAGMA =

==PARI/GP==
PARI / GP является широко используемой алгебраической компьютерной системой, предназначенной для быстрых вычислений в теории чисел (факторизации, алгебраической теория чисел, эллиптических кривых ...), но содержит также большое количество других полезных функций для работы с математическими структурами, такими как матрицы, многочлены, степенные ряды, алгебраические числа и т.д., а также множество трансцендентных функций. PARI также доступна в виде библиотеки C для более быстрого вычисления. 

  * PARI это библиотека C, позволяющая быстро производить расчеты. 
  * gp представляет собой простую в использовании интерактивную оболочку, дающую доступ к функциям PARI. 
  * GP - название скриптового языка GP. 
  * gp2c, сочетает в себе лучшее из обоих миров путём компиляции GP скриптов на языке C и прозрачной загрузки результатов функций в GP. (Gp2c скомпилированные скрипты, как правило, работают в 3 или 4 раза быстрее). Gp2c настоящее время понимает только подмножество языка GP.

На сайте http://pari.math.u-bordeaux.fr/ пользователь может скачать  все дополнительные PARI / GP пакеты, предоставляемые группой PARI. Эти пакеты будут бесполезны для большинства пользователей, поэтому они распространяются отдельно и устанавливаются самостоятельно.

GNU MP или GMP для краткости, это библиотека многократной точности, которая обеспечивает асимптотически быстрые программы для арифметических операций между числами. Ядро PARI  может использовать родную реализацию или использовать GMP, если это возможно.

PARI / GP является свободным программным обеспечением. Она распространяется под GNU's General Public License.

PARI / GP одновременно поддерживает две версии PARI: 

стабильная = нечетный младший номер версии, например, 2.3.x: изменения происходят только, чтобы исправить большие ошибки, которые поддаются лечению с незначительными изменениями. В этой версии нельзя увидеть ни значительные улучшения, ни сложные изменения. Основной целью является стабильная работа при исполнении рабочих скриптов или кода. Таким образом, можно с уверенностью обновлять версию в рамках одной ветви развития, например, 2.3.x, до 2.3.y. Эта ветвь обычно отстает от testing : как правило, она содержит множество известных ошибок и отсутствие некоторых полезных функций. 

тестирование = чётный младший номер версии, например, 2.4.x: это версия для развития, и никаких гарантий не даётся, хотя все обычно работает. Большие фрагменты кода изменяются, особенности проявляются или отменяются, интерфейсы меняются в зависимости от обратной связи, мы получаем, что многие ошибки исправлены, но появляются и новые. В конце концов, версии тестирования объединяются в одну стабильную, и начинается новое тестирование. 

Пример решения задачи с помощью PARI / GP:<br>
*Задача.*<br>
Найти эллиптическую кривую с наибольшим количеством точек, заданную над полем F<sub>13</sub>.<br>
Код для PARI / GP :<br>
? read("sea.gp");
? m=0; for(a=0,12,for(b=0,12, trap(,0, E=ellinit([0,0,0,a,b] [*] Mod(1,13)); t=ellsea(E,13);<br> if(t>m,m=t;B=[a,b]) ) )); print(m); print(B)<br>
Ответ:<br>
21<br>
{0, 4}<br>
Таким образом, наибольшее число точек (равное 21) над  полем F<sub>13</sub> имеет кривая y^2^ = x^3^+4

==MAGMA==

Магма представляет собой большой, хорошо поддерживаемый программный пакет предназначенный для решения сложных вычислительных задач в области алгебры, теории чисел, геометрии и комбинаторике. Она обеспечивает математически строгие условия для вычислений с алгебраическими, теоретико-числовыми, комбинаторными и геометрическими объектами.

Хотя Магма не является коммерческой системой, производители хотят восстановить все расходы, связанные с ее распространением и поддержкой. Эти расходы включают в себя портирование для многочисленных различных процессоров, подготовка документации для пользователей, распределения расходов, службу исправления ошибок и общую поддержку пользователей. Следовательно, распределение расходов проводится на основе подписки, при которой сайт выдаёт подписки для запуска программы Магма на один или несколько процессоров в течение определенного периода, как правило, 3 лет. Подписавшийся сайт (или лицо) получает все новые релизы, исправления ошибок и общую поддержку во время подписки. В конце периода подписки сайт или обновляет подписку или продолжает работать с последней версией, которая была получена в то время, как подписка было активна. 

Стоимость подписки зависит от типа процессора. В общем случае 3 года подписки для одного или нескольких настольных компьютеров в учебном заведении (каждый из которых не более 4 ядер) будут стоить US $ 1200 для одной машины, 1800 долл. США на тот же срок на 4 машины, US $ 2400 на 8 машин и т. д. Цены в коммерческих и государственных организаций выше.

Сокращенная по стоимости студент-версия доступна для ПК (Windows / Linux) и компьютеров Mac (OS X). Студент-версия ограничена рабочей областью 150 мегабайт, и некоторые дополнительные функции опущены.

На официальном сайте Magma для пользователей доступен online-calculator Magma. Кроме того, с сайта можно скачать коды различных функций. Как пример можно рассмотреть вычисление с помощью аналитического якобиана кривой 2ого рода. Код приведён ниже:<br>
 <code>function inbase(basis, a)
  line := basis cat [Universe(basis)!a];
  lst := LinearRelation(line : Al := "LLL");
  if lst[[#lst]] eq 0 then
    return 0;
  else
    return [[ lst[[i]]/lst[[#lst]] : i in [1..#lst-1] ];
  end if;
end function;</code>

<code>// Section 3: Isogenies

function MyPowerRelation(a, d)
  pol := PowerRelation(a, d : Al := "LLL");
  if Degree(pol) le 0 or IsIrreducible(pol) then
    return pol;
  else
    fac := Factorization(pol);
    ,ind := Min([ Abs(Evaluate(f[1], a)) : f in fac ]);
    return fac [[ind]] [[1]];
  end if;
end function;
function xi2tau(xi, Ia, cc, pres)
 
 // This next line was not necessary in the text because Z had been
  // defined prior to the function definition.
  Z := Integers();
  O := MaximalOrder(Parent(xi));
  E := Matrix(Z, 4, 4, [ Trace(xi* cc(a)*b) : b in Basis(Ia), a in Basis(Ia) ]);
  , C := FrobeniusFormAlternating(E);
  newb := ElementToSequence[(Matrix(O, C)*Matrix(O, 4, 1, Basis(Ia)]));
  C := ComplexField(pres);
  SetKantPrecision(O, pres);
  Phi := [ i : i in [1..4] | Im(Conjugate(xi, i)) gt 0 ];
  PMat := Matrix(C, 2, 4, [ Conjugate(b, Phi[1]) : b in newb ] cat
                          [ Conjugate(b, Phi[2]) : b in newb ]);
  return Submatrix[(PMat, 1, 3, 2, 2)^-1 * Submatrix(PMat, 1, 1, 2, 2)];
end function;</code>

Компьютерная алгебраическая система Магма предназначена для вычислений со структурами, которые возникают в таких областях, как алгебра, теория чисел, алгебраическая геометрия и (алгебраическая) комбинаторика. Магма позволяет пользователям задать и вычислять с помощью таких структур, как группы, кольца, поля, модули, схемы, кривые, графики, коды и многие другие. Основные черты Магма включают в себя: 


 * Алгебраическая философия разработки: разработка принципов, лежащих в основе языка пользователя и архитектуры системы, базируется на идеях универсальной алгебры и теории категорий. Язык максимально приближен к обычному математическому мышлению и обозначениям. В частности, основные конструкции в языке пользователя - (алгебраические) структуры и морфизмы. 


 * Явная типизация: пользователь должен явно определить алгебраические структур, в которых будут проводиться вычисления. Каждый объект, возникающий при вычислении далее, определяется с точки зрения этих структур. 


 * Математические данные: Magma имеет доступ к большому числу баз данных, содержащих информацию, которая может быть использована для поиска интересных примеров, или которые являются неотъемлемой частью некоторых алгоритмов. Примеры существующих баз данных включают факторизации целых чисел ; модульных уравнений; сильно регулярных графов; максимальных подгрупп простых групп; целочисленных решеток; самых известных линейных кодов и многое другое. 


 * Производительность: Предполагается, что Магма обеспечивает максимальную производительность, как в плане используемых алгоритмов, так и их реализации. Философия дизайна позволяет ядру выбирать оптимальные структуры данных на машинном уровне. Большинство основных алгоритмов в настоящее время установлены в ядро Магма, они являются современными и готовы дать аналогичную производительность, или лучше, чем специализированные программы. 

Теоретическая основа для разработки Магма базируется на концепции и методологии современной алгебры.

Магма состоит из языка программирования пользователей на основе принципов, изложенных выше, а также программного кода и баз данных, предназначенных для поддержки вычислительных исследований в алгебраических областях математики. Основные направления, представленные в Магма (V версии) включают в себя теории групп, теории колец, коммутативную алгебру, арифметику полей и их дополнений, теорию модулей и теорию структур, конечномерные алгебры, теории Ли, теорию представлений, гомологическую алгебру, генеральные схемы и схемы кривой , модульные формы и модулярные кривые, линейные коды и многое другое.